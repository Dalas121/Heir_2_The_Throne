

#
# TO USE: call the {PLACE_FIRE} macro to determine which hexes start on fire
# then, include the {IMPLEMENT_FIRES} macro to automatically spread fires every turn
#


#define PLACE_FIRE X Y
    {VARIABLE_OP fire_image rand (1,2,3,4,5,6,7)} # can't randomize the images themselves, because there's commas
    [if] {VARIABLE_CONDITIONAL fire_image equals 1} {THEN(  {VARIABLE fire_image "scenery/fire_hybrid/00[01~15      ].png"}  )} [/if]
    [if] {VARIABLE_CONDITIONAL fire_image equals 2} {THEN(  {VARIABLE fire_image "scenery/fire_hybrid/00[03~15,01~02].png"}  )} [/if]
    [if] {VARIABLE_CONDITIONAL fire_image equals 3} {THEN(  {VARIABLE fire_image "scenery/fire_hybrid/00[05~15,01~04].png"}  )} [/if]
    [if] {VARIABLE_CONDITIONAL fire_image equals 4} {THEN(  {VARIABLE fire_image "scenery/fire_hybrid/00[07~15,01~06].png"}  )} [/if]
    [if] {VARIABLE_CONDITIONAL fire_image equals 5} {THEN(  {VARIABLE fire_image "scenery/fire_hybrid/00[09~15,01~08].png"}  )} [/if]
    [if] {VARIABLE_CONDITIONAL fire_image equals 6} {THEN(  {VARIABLE fire_image "scenery/fire_hybrid/00[11~15,01~10].png"}  )} [/if]
    [if] {VARIABLE_CONDITIONAL fire_image equals 7} {THEN(  {VARIABLE fire_image "scenery/fire_hybrid/00[13~15,01~12].png"}  )} [/if]
    [item]
        x,y,halo={X},{Y},$fire_image
        name=fire
        redraw=no # for performance; redraw after all fires are placed instead
    [/item]
#enddef











#define STORE_TIME OFFSET INITIAL_TIME
    [store_time_of_day]
        x,y=10,10 # arbitrary coordinates; 1,1 is more likely to be in a cave or something
        variable=stored_fire_tod{OFFSET}
        turn="$( ($turn_number+{OFFSET} - $turn_number+{INITIAL_TIME} +7)%6 )"
    [/store_time_of_day]
#enddef
#define FIRE_TIME OFFSET
    [time]
        id=$stored_fire_tod{OFFSET}.id
        name=$stored_fire_tod{OFFSET}.name
        image=$stored_fire_tod{OFFSET}.image|~BLIT(misc/tod-bright.png)
        lawful_bonus="$( min([ 25, 25+$stored_fire_tod{OFFSET}.lawful_bonus ]) )"
        red=  "$( 40+$stored_fire_tod{OFFSET}.red   )" # be visibily illuminated during the night
        green="$( 30+$stored_fire_tod{OFFSET}.green )"
        blue= "$( 20+$stored_fire_tod{OFFSET}.blue  )"
    [/time]
#enddef
#define IMPLEMENT_FIRES INITIAL_TIME
    #############################
    # FIRE - HEX DAMAGE
    #############################
    [event]
        name=enter hex
        first_time_only=no
        {FILTER( {NOT type_adv_tree="Fire Guardian"} {FILTER_LOCATION find_in=fires} )}
        [harm_unit]
            {FILTER id=$unit.id}
            amount,damage_type=1,fire
            kill,fire_event=yes,yes
        [/harm_unit]
    [/event]
    #############################
    # FIRE - TURN DAMAGE
    #############################
    [event]
        name=side turn end
        first_time_only=no
        [harm_unit]
            {FILTER( side=$side_number {NOT type_adv_tree="Fire Guardian"} {FILTER_LOCATION find_in=fires} )}
            amount,damage_type=10,fire
            kill,fire_event=yes,yes
        [/harm_unit]
    [/event]
    #############################
    # FIRE - SPREAD & EXTINGUISH
    #############################
    [event]
        name=new turn,tick_fires
        first_time_only=no
        # if we do this on new turn, sometimes enemies/allies appear to stand in the fire even though they won't ever take damage from it, which is bad
        # but, if we do it on side 1 turn end, the burning forest can sometimes change enemy pathing, which is much worse. Best to stick with "new turn"

        #------------------
        # FIRES BURN
        #------------------
        [store_items]
            item_name=fire
            variable=fires
        [/store_items]
        [foreach]
            array=fires
            variable=fire
            [do]
                {VARIABLE_OP yesno rand "yes,yes,yes,yes,no"} # 4/5 chance to trigger each turn; 3 triggers before fire goes out
                [if] {VARIABLE_CONDITIONAL yesno equals yes} {THEN(
                    # FIRST TRIGGER: replace ground with sand
                    [if] {HAVE_LOCATION( x,y=$fire.x,$fire.y {NOT terrain=Dd*^*,Ds*^*,Rrd*^*} )} {THEN(
                        {VARIABLE_OP sand rand "Dd,Ds,Rrd"}
                        [terrain]
                            x,y=$fire.x,$fire.y
                            layer,terrain=base,$sand
                        [/terrain]
                        {CLEAR_VARIABLE sand}
                        [continue][/continue]
                    )} [/if]

                    # SECOND TRIGGER: replace lush forest with burned forest
                    [if] {HAVE_LOCATION( x,y,terrain=$fire.x,$fire.y,*^F* {NOT terrain=*^Fdw} )} {THEN(
                        [terrain]
                            x,y=$fire.x,$fire.y
                            layer,terrain=overlay,^Fdw
                        [/terrain]
                        [continue][/continue]
                    )} [/if]

                    # THIRD TRIGGER: remove fire and (often) remove forest
                    [if] {HAVE_LOCATION(x,y,terrain=$fire.x,$fire.y,*^Fdw)}
                        {NOT({HAVE_LOCATION(
                            {FILTER_ADJACENT_LOCATION x,y=$fire.x,$fire.y} # if an adjacent forest hex hasn't caught on fire yet, don't let this fire go out
                            terrain=*^F* {NOT terrain=*^Fdw} {NOT find_in=fires}
                        )})}
                    {THEN(
                        [remove_item]
                            x,y,image=$fire.x,$fire.y,"fire"
                        [/remove_item]
                        # 1/2 chance to remove the forest too
                        {VARIABLE_OP yesno rand "yes,no"}
                        [if] {VARIABLE_CONDITIONAL yesno equals yes} {THEN(
                            [terrain]
                                x,y=$fire.x,$fire.y
                                layer,terrain=overlay,"^"
                            [/terrain]
                        )} [/if]
                        [continue][/continue]
                    )} [/if]
                )} [/if]
            [/do]
        [/foreach]

        #------------------
        # FIRES SPREAD
        #------------------
        [store_items]
            item_name=fire
            variable=fires
        [/store_items]
        [foreach]
            array=fires
            variable=fire
            [do]
                # what are the adjacent hexes?
                [store_items]
                    item_name=fire
                    variable=fires_updated
                [/store_items]
                [store_locations]
                    {FILTER_ADJACENT_LOCATION x,y=$fire.x,$fire.y}
                    terrain=*^F* {NOT find_in=fires_updated} # don't prevent re-lighting ^Fdw hexes
                    variable=adjacent_nonburning_forests
                [/store_locations]
                {CLEAR_VARIABLE fires_updated}
                [foreach]
                    array=adjacent_nonburning_forests
                    variable=forest
                    [do]
                        {VARIABLE_OP yesno rand "yes,no,no"} # 1/3 chance (per adjacent fire, per turn) for a new fire to start
                        [if] {VARIABLE_CONDITIONAL yesno equals yes} {THEN(
                            {PLACE_FIRE $forest.x $forest.y}
                        )} [/if]
                    [/do]
                [/foreach]
            [/do]
        [/foreach]
        {CLEAR_VARIABLE yesno}
        {REDRAW}

        #------------------
        # REFRESH ILLUMINATION
        #------------------
        [store_items]
            item_name=fire
            variable=fires
        [/store_items]
        [remove_time_area]
            id=fire_illumination
        [/remove_time_area]
        {STORE_TIME 0 {INITIAL_TIME}}
        {STORE_TIME 1 {INITIAL_TIME}}
        {STORE_TIME 2 {INITIAL_TIME}}
        {STORE_TIME 3 {INITIAL_TIME}}
        {STORE_TIME 4 {INITIAL_TIME}}
        {STORE_TIME 5 {INITIAL_TIME}}
        [time_area]
            id=fire_illumination
            find_in=fires
            current_time="$( ($turn_number-1+{INITIAL_TIME})%6 )"
            {FIRE_TIME 0}
            {FIRE_TIME 1} # repeat this 6 times so that the schedule indicator shows #/6 instead of 1/1
            {FIRE_TIME 2}
            {FIRE_TIME 3}
            {FIRE_TIME 4}
            {FIRE_TIME 5}
        [/time_area]
        {CLEAR_VARIABLE stored_fire_tod}

        # leave the "fires" array intact, so we have accurate data for fire-related events, avoids, etc
        [store_items]
            item_name=fire
            variable=fires
        [/store_items]
    [/event]

    [event]
        name=victory
        {CLEAR_VARIABLE fires}
    [/event]
#enddef

